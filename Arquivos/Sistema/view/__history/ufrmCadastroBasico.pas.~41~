unit ufrmCadastroBasico;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Data.DB, Vcl.Grids,
  Vcl.DBGrids, Vcl.ComCtrls, Vcl.ToolWin, Vcl.ActnMan, Vcl.ActnCtrls,
  Vcl.ExtCtrls, System.Actions, Vcl.ActnList, System.ImageList, Vcl.ImgList,
  Vcl.PlatformDefaultStyleActnCtrls, Datasnap.DBClient, Vcl.Buttons;

type
  TfrmCadastroBasico = class(TForm)
    dsTabela: TDataSource;
    Panel1: TPanel;
    PageControl1: TPageControl;
    tbscadastro: TTabSheet;
    tbsPesquisa: TTabSheet;
    dbgDados: TDBGrid;
    ImageListcadastro: TImageList;
    Label1: TLabel;
    editpesquisar: TEdit;
    btnfiltrar: TButton;
    StatusBar1: TStatusBar;
    actacoes: TActionList;
    acinserir: TAction;
    aceditar: TAction;
    acexcluir: TAction;
    acsalvar: TAction;
    accancelar: TAction;
    acpesquisar: TAction;
    acimprimir: TAction;
    acfechar: TAction;
    Inserir: TSpeedButton;
    SpeedButton1: TSpeedButton;
    SpeedButton2: TSpeedButton;
    SpeedButton3: TSpeedButton;
    SpeedButton4: TSpeedButton;
    SpeedButton5: TSpeedButton;
    SpeedButton6: TSpeedButton;
    SpeedButton7: TSpeedButton;
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure tbsPesquisaShow(Sender: TObject);
    procedure acinserirExecute(Sender: TObject);
    procedure aceditarExecute(Sender: TObject);
    procedure acexcluirExecute(Sender: TObject);
    procedure acsalvarExecute(Sender: TObject);
    procedure accancelarExecute(Sender: TObject);
    procedure acpesquisarExecute(Sender: TObject);
    procedure acimprimirExecute(Sender: TObject);
    procedure acfecharExecute(Sender: TObject);
    procedure acinserirUpdate(Sender: TObject);
    procedure aceditarUpdate(Sender: TObject);
    procedure acexcluirUpdate(Sender: TObject);
    procedure accancelarUpdate(Sender: TObject);
    procedure acimprimirUpdate(Sender: TObject);
    procedure acsalvarUpdate(Sender: TObject);
  private
    { Private declarations }
    procedure LimparTudo;
  public
    { Public declarations }
  end;

var
  frmCadastroBasico: TfrmCadastroBasico;

implementation

{$R *.dfm}

uses ModConexao;

procedure TfrmCadastroBasico.accancelarExecute(Sender: TObject);
begin
LimparTudo;
TClientDataSet(dsTabela.DataSet).Cancel;
end;

procedure TfrmCadastroBasico.accancelarUpdate(Sender: TObject);
begin
accancelar.Enabled := acsalvar.Enabled = true;
end;

procedure TfrmCadastroBasico.aceditarExecute(Sender: TObject);
begin
if PageControl1.ActivePage = tbsPesquisa then
  PageControl1.ActivePage := tbsCadastro;
  TClientDataSet(dsTabela.DataSet).Edit;
end;

procedure TfrmCadastroBasico.aceditarUpdate(Sender: TObject);
begin
if (dsTabela.State in [dsBrowse]) and (not TClientDataSet(dsTabela.DataSet).IsEmpty) then

aceditar.Enabled := dsTabela.State in [dsBrowse];
end;

procedure TfrmCadastroBasico.acexcluirExecute(Sender: TObject);
begin
if Application.MessageBox('Deseja Realmente Excluir o Registro?', 'Pergunta', MB_YESNO+MB_ICONQUESTION) = mrYes then
  begin
    try
      TclientDataSet(dsTabela.DataSet).Delete;
      TclientDataSet(dsTabela.DataSet).ApplyUpdates(0);

      Application.MessageBox('Registro Excluido com Sucesso!', 'Informação', 0+64);
      TClientDataSet(dsTabela.DataSet).Open;

      except on E : Exception do

      raise Exception.Create('Error ao Excluir o Registro: '+E.Message);



    end;
  end;
end;

procedure TfrmCadastroBasico.acexcluirUpdate(Sender: TObject);
begin
if (dsTabela.State in [dsBrowse]) and (not TClientDataSet(dsTabela.DataSet).IsEmpty) then
  acexcluir.Enabled := dsTabela.State in [dsBrowse];
end;

procedure TfrmCadastroBasico.acfecharExecute(Sender: TObject);
begin
close;
end;

procedure TfrmCadastroBasico.acimprimirExecute(Sender: TObject);
begin
ShowMessage('Em Desenvolvimento');
end;

procedure TfrmCadastroBasico.acimprimirUpdate(Sender: TObject);
begin
if (dsTabela.State in [dsBrowse]) and (not TClientDataSet(dsTabela.DataSet).IsEmpty) then

acimprimir.Enabled := dsTabela.State in [dsBrowse];
end;

procedure TfrmCadastroBasico.acinserirExecute(Sender: TObject);
begin
if PageControl1.ActivePage = tbsPesquisa then
PageControl1.ActivePage := tbsCadastro;
if not TClientDataSet(dsTabela.DataSet).active then

  TClientDataSet(dsTabela.DataSet).Open;
  TClientDataSet(dsTabela.DataSet).Insert;

end;

procedure TfrmCadastroBasico.acinserirUpdate(Sender: TObject);
begin
acinserir.Enabled := dsTabela.State in [dsBrowse,dsInactive];
end;

procedure TfrmCadastroBasico.acpesquisarExecute(Sender: TObject);
begin
TClientDataSet(dsTabela.DataSet).Close;
TClientDataSet(dsTabela.DataSet).Open;
end;

procedure TfrmCadastroBasico.acsalvarExecute(Sender: TObject);
begin
try

    TClientDataSet(dsTabela.DataSet).Post;
    TClientDataSet(dsTabela.DataSet).ApplyUpdates(0);

    case dsTabela.State of
    dsEdit : Application.MessageBox('Registro Atualizado com Sucesso!', 'Informação', MB_OK+MB_ICONINFORMATION);
    dsInsert : Application.MessageBox('Registro Inserido com Sucesso!', 'Informação', MB_OK+MB_ICONINFORMATION);
    end;


      //Limpar os campos
      LimparTudo;
        TClientDataSet(dsTabela.DataSet).Open;


except on E : Exception do
raise Exception.Create('Erro ao Salvar Registro: '+E.Message);

end;
end;

procedure TfrmCadastroBasico.acsalvarUpdate(Sender: TObject);
begin
acsalvar.Enabled := dsTabela.State in [dsinsert,dsedit];
end;

procedure TfrmCadastroBasico.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
    TClientDataSet(dsTabela.DataSet).Cancel;
      TClientDataSet(dsTabela.DataSet).Close;
end;

procedure TfrmCadastroBasico.FormKeyPress(Sender: TObject; var Key: Char);
begin
if key = #27 then
    close;
if key = #13 then
    Perform (WM_NEXTDLGCTL, 0, 0);
end;

procedure TfrmCadastroBasico.LimparTudo;
var
  i: Integer;

begin
for i  := 0 to ComponentCount -1 do
  begin
    if Components[i] is TCustomEdit then
    TCustomEdit(components[i]).Clear;
  end;
  if PageControl1.ActivePage = tbsCadastro then
      PageControl1.ActivePage := tbsPesquisa;

end;

procedure TfrmCadastroBasico.tbsPesquisaShow(Sender: TObject);
begin
  PageControl1.ActivePage := tbsPesquisa;
end;

end.

